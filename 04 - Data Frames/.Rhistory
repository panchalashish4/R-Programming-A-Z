for(i in profit_after_tax){
if(i > profit_mean){
answer <- "Good Month"
} else{
answer <- "Bad Month"
}
}
for(i in profit_after_tax){
if(i > profit_mean){
answer <- c("Good Month")
} else{
answer <- c("Bad Month")
}
}
profit_per_month
profit_after_tax
profit_margin_em
for(i in profit_after_tax){
if(i > profit_mean){
best_month <- i
} else{
worst_month <- i
}
}
max(profit_after_tax)
min(profit_after_tax)
rm(v1)
rm(i)
rm(answer)
best_month <- max(profit_after_tax)
best_month
worst_month <- min(profit_after_tax)
worst_month
for(i in profit_after_tax){
if(i > profit_mean){
print(i)
} else
{
print("test")
}
}
for(i in profit_after_tax){
if(i > profit_mean){
print("Good")
} else
{
print("Bad")
}
}
for(i in profit_after_tax){
if(i > profit_mean){
good <- print("Good")
good
} else
{
bad <- print("Bad")
bad
}
}
for(i in profit_after_tax){
if(i > profit_mean){
good <- i
good
} else
{
bad <- i
bad
}
}
for(i in profit_after_tax){
if(i > profit_mean){
good <- i
good
} else
{
bad <- i
bad
}
}
for(i in profit_after_tax){
if(i > profit_mean){
good <- i
print(good)
} else
{
bad <- i
print(bad)
}
}
for(i in profit_after_tax){
if(i > profit_mean){
good <- i
print(good)
} else
{
bad <- i
c(bad)
print(bad)
}
}
profit_margin_em <- profit_after_tax/revenue
round(profit_margin_em,2)
profit_margin_em
round(profit_margin_em,2)
round(profit_margin_em,2) <- profit_after_tax/revenue
profit_margin_em
profit_margin_em <- profit_after_tax/revenue
profit_margin_em <- round(profit_per_month,2)
profit_margin_em
profit_margin_em <- round(profit_per_month,1)
profit_margin_em
profit_margin_em <- round(profit_per_month,2)
profit_margin_em
profit_margin_em <- round(profit_per_month,0)
profit_margin_em
#5. Best Month
best_month <- max(profit_after_tax)
best_month
revenue_after_tax <- revenue - (revenue*30/100)
profit_after_tax <- revenue_after_tax - expenses
profit_after_tax <- round(profit_after_tax,0)
profit_after_tax
profit_margin_em <- profit_after_tax/revenue*100
profit_margin_em <- round(profit_per_month,0)
profit_margin_em
profit_margin_em <- profit_after_tax/revenue
profit_margin_em <- round(profit_per_month,0)
profit_margin_em
profit_margin_em <- profit_after_tax/revenue
#profit_margin_em <- round(profit_per_month,0)
profit_margin_em
profit_margin_em <- profit_after_tax/revenue*100
profit_margin_em <- round(profit_margin_em,0)
profit_margin_em
best_month <- max(profit_after_tax)
best_month <- round(best_month,0)
best_month
worst_month <- round(worst_month,0)
worst_month
good_months <- profit_after_tax > profit_mean
good_months
bad_months <- !good_months
revenue_after_tax <- round(revenue - (revenue*30/100),0)
profit_after_tax <- revenue_after_tax - expenses
profit_after_tax
#5. Best Month
best_month <- profit_after_tax == max(profit_after_tax)
best_month
#6. Worst Month
worst_month <- profit_after_tax == min(profit_after_tax)
worst_month
new.revenue <- round(revenue/1000,0)
new.revenue <- round(revenue/1000,0)
new.revenue
new.expenses <-round(expenses/1000,0)
new.expenses
#Data
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
#Solution
#1. Profit after each month
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
revenue_after_tax <- round(revenue - (revenue*30/100),0)
profit_after_tax <- revenue_after_tax - expenses
profit_after_tax
#3. Profit margin each month
profit_margin_em <- round(profit_after_tax/revenue*100,0)
profit_margin_em
#4. Good Months
profit_mean <- mean(profit_after_tax)
profit_mean
good_months <- profit_after_tax > profit_mean
good_months
#5. Bad Months
bad_months <- !good_months
#5. Best Month
best_month <- profit_after_tax == max(profit_after_tax)
best_month
#6. Worst Month
worst_month <- profit_after_tax == min(profit_after_tax)
worst_month
#7. converting in k like 10k
new.revenue <- round(revenue/1000,0)
new.expenses <- round(expenses/1000,0)
new.profit <- round(profit_per_month/1000,0)
new.profit.after.tax <- round(profit_after_tax/1000,0)
##print
new.revenue
new.expenses
new.profit
new.profit.after.tax
good_months
bad_months
best_month
worst_month
#Data
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
#Solution
#1. Profit after each month
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
revenue_after_tax <- round(revenue - (revenue*30/100),2)
profit_after_tax <- revenue_after_tax - expenses
profit_after_tax
#3. Profit margin each month
profit_margin_em <- round(profit_after_tax/revenue,2) * 100
profit_margin_em
#4. Good Months
profit_mean <- mean(profit_after_tax)
profit_mean
good_months <- profit_after_tax > profit_mean
good_months
#5. Bad Months
bad_months <- !good_months
#5. Best Month
best_month <- profit_after_tax == max(profit_after_tax)
best_month
#6. Worst Month
worst_month <- profit_after_tax == min(profit_after_tax)
worst_month
#7. converting in k like 10k
new.revenue <- round(revenue/1000,0)
new.expenses <- round(expenses/1000,0)
new.profit <- round(profit_per_month/1000,0)
new.profit.after.tax <- round(profit_after_tax/1000,0)
##print
new.revenue
new.expenses
new.profit
new.profit.after.tax
profit_margin_em
profit_mean
good_months
bad_months
best_month
worst_month
M <- rbind(new.revenue,
new.expenses,
new.profit,
new.profit.after.tax,
profit_margin_em,
profit_mean,
good_months,
bad_months,
best_month,
worst_month)
M
#Data
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
#Solution
#1. Profit after each month
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
tax <- round(profit*0.30,2)
profit_after_tax <- profit_per_month - tax
profit_after_tax
#3. Profit margin each month
profit_margin_em <- round(profit_after_tax/revenue,2) * 100
profit_margin_em
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
tax <- round(profit_per_month*0.30,2)
profit_after_tax <- profit_per_month - tax
profit_after_tax
#Data
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
#Solution
#1. Profit after each month
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
tax <- round(profit_per_month*0.30,2)
profit_after_tax <- profit_per_month - tax
profit_after_tax
profit_margin_em <- round(profit_after_tax/revenue,2) * 100
profit_margin_em
profit_mean <- mean(profit_after_tax)
profit_mean
good_months <- profit_after_tax > profit_mean
good_months
bad_months <- !good_months
bad_months
#Data
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
#Solution
#1. Profit after each month
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
tax <- round(profit_per_month*0.30,2)
profit_after_tax <- profit_per_month - tax
profit_after_tax
#3. Profit margin each month
profit_margin_em <- round(profit_after_tax/revenue,2) * 100
profit_margin_em
#4. Good Months
profit_mean <- mean(profit_after_tax)
profit_mean
good_months <- profit_after_tax > profit_mean
good_months
#5. Bad Months
bad_months <- !good_months
bad_months
#5. Best Month
best_month <- profit_after_tax == max(profit_after_tax)
best_month
#6. Worst Month
worst_month <- profit_after_tax == min(profit_after_tax)
worst_month
#7. converting in k like 10k
new.revenue <- round(revenue/1000)
new.expenses <- round(expenses/1000)
new.profit <- round(profit_per_month/1000)
new.profit.after.tax <- round(profit_after_tax/1000)
##print
new.revenue
new.expenses
new.profit
new.profit.after.tax
profit_margin_em
profit_mean
good_months
bad_months
best_month
worst_month
##Bonus
M <- rbind(new.revenue,
new.expenses,
new.profit,
new.profit.after.tax,
profit_margin_em,
profit_mean,
good_months,
bad_months,
best_month,
worst_month)
M
#Data
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
#Solution
#1. Profit after each month
profit_per_month <- revenue - expenses
profit_per_month
#2. Profit after tax
tax <- round(profit_per_month*0.30,2)
profit_after_tax <- profit_per_month - tax
profit_after_tax
#3. Profit margin each month
profit_margin_em <- round(profit_after_tax/revenue,2) * 100
profit_margin_em
#4. Good Months
profit_mean <- mean(profit_after_tax)
profit_mean
good_months <- profit_after_tax > profit_mean
good_months
#5. Bad Months
bad_months <- !good_months
bad_months
#5. Best Month
best_month <- profit_after_tax == max(profit_after_tax)
best_month
#6. Worst Month
worst_month <- profit_after_tax == min(profit_after_tax)
worst_month
#7. converting in k like 10k
new.revenue <- round(revenue/1000)
new.expenses <- round(expenses/1000)
new.profit <- round(profit_per_month/1000)
new.profit.after.tax <- round(profit_after_tax/1000)
##print
new.revenue
new.expenses
new.profit
new.profit.after.tax
profit_margin_em
good_months
bad_months
best_month
worst_month
##Bonus
M <- rbind(new.revenue,
new.expenses,
new.profit,
new.profit.after.tax,
profit_margin_em,
good_months,
bad_months,
best_month,
worst_month)
M
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/
datasets/nyt1.csv"))
#categorize
?head()
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/
datasets/nyt1.csv"))
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/
datasets/nyt1.csv"))
View(data1)
#categorize
head(data1)
data1$agecat <-cut(data1$Age,c(-Inf,0,18,24,34,44,54,64,Inf))
# view
summary(data1)
# view
summary(data1)
# brackets
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data =data1, FUN=siterange)
# so only signed in users have ages and genders
summaryBy(Gender+Signed_In+Impressions+Clicks~agecat,
data =data1)
# plot
install.packages("ggplot2")
library(ggplot2)
ggplot(data1, aes(x=Impressions, fill=agecat))
+geom_histogram(binwidth=1)
ggplot(data1, aes(x=agecat, y=Impressions, fill=agecat))
+geom_boxplot()
install.packages("ggplot2")
data1$hasimps <-cut(data1$Impressions,c(-Inf,0,Inf))
summaryBy(Clicks~hasimps, data =data1, FUN=siterange)
ggplot(subset(data1, Impressions>0), aes(x=Clicks/Impressions,
colour=agecat)) + geom_density()
ggplot(subset(data1, Clicks>0), aes(x=Clicks/Impressions,
colour=agecat)) + geom_density()
ggplot(subset(data1, Clicks>0), aes(x=agecat, y=Clicks,
fill=agecat)) + geom_boxplot()
ggplot(subset(data1, Clicks>0), aes(x=Clicks, colour=agecat))
+ geom_density()
data1$hasimps <-cut(data1$Impressions,c(-Inf,0,Inf))
summaryBy(Clicks~hasimps, data =data1, FUN=siterange)
ggplot(subset(data1, Impressions>0), aes(x=Clicks/Impressions,
colour=agecat)) + geom_density()
ggplot(subset(data1, Clicks>0), aes(x=Clicks/Impressions,
colour=agecat)) + geom_density()
ggplot(subset(data1, Clicks>0), aes(x=agecat, y=Clicks,
fill=agecat)) + geom_boxplot()
ggplot(subset(data1, Clicks>0), aes(x=Clicks, colour=agecat))
+ geom_density()
# create categories
data1$scode[data1$Impressions==0] <- "NoImps"
data1$scode[data1$Impressions >0] <- "Imps"
data1$scode[data1$Clicks >0] <- "Clicks"
#Convert the column to a factor
data1$scode <- factor(data1$scode)
head(data1)
#look at levels
clen <- function(x){c(length(x))}
etable<-summaryBy(Impressions~scode+Gender+agecat,
data = data1, FUN=clen)
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/
datasets/nyt1.csv"))
#categorize
head(data1)
data1$agecat <-cut(data1$Age,c(-Inf,0,18,24,34,44,54,64,Inf))
# view
summary(data1)
# brackets
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data =data1, FUN=siterange)
# so only signed in users have ages and genders
summaryBy(Gender+Signed_In+Impressions+Clicks~agecat,
data =data1)
# plot
install.packages("ggplot2")
library(ggplot2)
ggplot(data1, aes(x=Impressions, fill=agecat))
+geom_histogram(binwidth=1)
ggplot(data1, aes(x=agecat, y=Impressions, fill=agecat))
+geom_boxplot()
# create click thru rate
# we don't care about clicks if there are no impressions
# if there are clicks with no imps my assumptions about
# this data are wrong
data1$hasimps <-cut(data1$Impressions,c(-Inf,0,Inf))
summaryBy(Clicks~hasimps, data =data1, FUN=siterange)
ggplot(subset(data1, Impressions>0), aes(x=Clicks/Impressions,
colour=agecat)) + geom_density()
ggplot(subset(data1, Clicks>0), aes(x=Clicks/Impressions,
colour=agecat)) + geom_density()
ggplot(subset(data1, Clicks>0), aes(x=agecat, y=Clicks,
fill=agecat)) + geom_boxplot()
ggplot(subset(data1, Clicks>0), aes(x=Clicks, colour=agecat))
+ geom_density()
# create categories
data1$scode[data1$Impressions==0] <- "NoImps"
data1$scode[data1$Impressions >0] <- "Imps"
data1$scode[data1$Clicks >0] <- "Clicks"
#Convert the column to a factor
data1$scode <- factor(data1$scode)
head(data1)
#look at levels
clen <- function(x){c(length(x))}
etable<-summaryBy(Impressions~scode+Gender+agecat,
data = data1, FUN=clen)
install.packages("ggplot2")
setwd("~/R Scripts/R-Programming-A-Z/04 - Data Frames")
